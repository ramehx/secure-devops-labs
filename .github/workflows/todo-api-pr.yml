name: TodoAPI PR

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/TodoAPI/**'
      - 'src/TodoAPI.Tests/**'
      - '.github/workflows/todo-api-pr.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write


    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |
        dotnet restore src/TodoAPI/TodoAPI.csproj
        dotnet restore src/TodoAPI.Tests/TodoAPI.Tests.csproj
    
    - name: Build
      run: |
        dotnet build --no-restore src/TodoAPI/TodoAPI.csproj
        dotnet build --no-restore src/TodoAPI.Tests/TodoAPI.Tests.csproj
    
    - name: Test
      run: dotnet test --no-build src/TodoAPI.Tests/TodoAPI.Tests.csproj --verbosity normal --logger "trx;LogFileName=test-results.trx"
      
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Todo API Tests
        path: '**/TestResults/*.trx'
        reporter: dotnet-trx

  sca:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read
      actions: read
      security-events: write


    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |
        dotnet restore src/TodoAPI/TodoAPI.csproj
        dotnet restore src/TodoAPI.Tests/TodoAPI.Tests.csproj

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/dotnet@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk.sarif --file=TodoApp.sln
        
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
    
    - name: Publish security report to artifact
      uses: actions/upload-artifact@v4
      with:
        name: snyk-report
        path: snyk.sarif
    
  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: read
      actions: read
      security-events: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'csharp'
          queries: 'security-extended,security-and-quality'
          build-mode: 'none'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:csharp"

      # SonarCloud Analysis
      - name: Set up SonarCloud
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        with:
          projectBaseDir: src/TodoAPI
          args: >
            -Dsonar.organization=<your_sonar_org_key>
            -Dsonar.projectKey=<your_sonar_project_key>
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

run-container-scan: 
   permissions:
     contents: read
     security-events: write
     actions: read

   runs-on: ubuntu-latest
   needs: build
   steps:
     - uses: actions/checkout@v3

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1

     - name: build local container
       uses: docker/build-push-action@v2
       with:
         context: src/TodoAPI
         tags: todo-api:trivy
         push: false
         load: true
     - name: Run Trivy vulnerability scanner
       uses: aquasecurity/trivy-action@master
       with:
         image-ref: todo-api:trivy
         format: 'sarif'
         output: 'trivy-results.sarif'
         vuln-type: 'os,library'

     - name: Upload SARIF file
       uses: github/codeql-action/upload-sarif@v3
       if: success() || failure()
       with:
         sarif_file: trivy-results.sarif
     
     - name: Publish security report to artifact
       uses: actions/upload-artifact@v4
       if: success() || failure()
       with:
         name: trivy-report
         path: trivy-results.sarif  
    

          

